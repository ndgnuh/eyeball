# Generated by dirtytorch
# short_desc: Helpers for dict's (merge_dict, AttrDict)
from copy import copy as mcopy


class AttrDict(dict):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.__dict__ = self


def munchify(d: dict, max_depth=100, depth=0, copy=False):
    if depth > max_depth:
        print("Maximum recursion depth reached, returning base dict")
        return d

    if copy:
        d = mcopy.copy(d)

    for k, v in d.items():
        if isinstance(v, dict):
            d[k] = munchify(v,
                            copy=copy,
                            max_depth=max_depth,
                            depth=depth+1)

    return AttrDict(d)
